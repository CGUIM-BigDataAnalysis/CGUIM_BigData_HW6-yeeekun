)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station,
scale=5
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station,
scale=2
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station,
scale=2
)
) +
geom_smooth(aes(x=PM2.5,
y=PM10)) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station,
scale=10
)
) +
geom_smooth(aes(x=PM2.5,
y=PM10)) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station,
scale=1
)
) +
geom_smooth(aes(x=PM2.5,
y=PM10)) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station,
scale=0.1
)
) +
geom_smooth(aes(x=PM2.5,
y=PM10)) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
geom_smooth(aes(x=PM2.5,
y=PM10),
scale=0.1) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
geom_smooth(aes(x=PM2.5,
y=PM10),
scale=10) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
geom_smooth(aes(x=PM2.5,
y=PM10)) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station,
size=10
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station,
size=5
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
qplot(PM2.5, PM10,
data = Air_Tidy.s,
geom = c("point", "smooth"))
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
AirPollution.201612.s<-spread(AirPollution.201612,Item,Mean)
AirPollution.201612.s<-spread(AirPollution.201612,Station,Item)
AirPollution.201612.s<-spread(AirPollution.201612,c(Date,Station,Item),Average)
AirPollution.201612.s<-spread(AirPollution.201612,Date,Station,Item,Average)
AirPollution.201612.s<-spread(AirPollution.201612,Item,Average)
View(AirPollution.201612.s)
AirPollution.201612.s<-spread(AirPollution[,-4:-27].201612,Item,Average)
[,-4:-27]
Air_Tidy.s <- spread(Air_Tidy, Date,Item, Mean)
Air_Tidy<-
AirPollution.201612[,-4:-27] %>% group_by(Station,Item) %>%
summarise(Date=Date
Mean = mean(Average,na.rm = T))
Air_Tidy<-
AirPollution.201612[,-4:-27] %>% group_by(Station,Item) %>%
summarise(Date=Date,
Mean = mean(Average,na.rm = T))
View(Air_Tidy)
Air_Tidy.s <- spread(Air_Tidy, Item, Mean)
Air_Tidy.m <- melt(Air_Tidy, id.vars = c("Station","Item"))
return(names(change)[names(change)=="日期"]="Date";
return(names(change)[names(change)=="日期"]="Date",
return(names(change)[names(change)=="日期"]="Date",
return(names(change)[names(change)=="日期"]="Date",
return(names(change)[names(change)=="日期"]="Date";)
return(names(change)[names(change)=="日期"]="Date")
func(Banqiao)
func<-function(change){
return(names(change)[names(change)=="日期"]="Date",
(names(change)[names(change)=="日期"]="Date";
func<-function(change){
(names(change)[names(change)=="日期"]="Date";
(names(change)[names(change)=="日期"]="Date";
names(change)[names(change)=="日期"]="Date";
func<-function(change){
names(change)[names(change)=="日期"]="Date";
}
func(Banqiao)
func(Banqiao)
View(Banqiao)
View(Linkou)
func(Linkou)
View(Linkou)
func<-function(change){
names(change)[names(change)=="日期"]="Date";
names(change)[names(change)=="測站"]="Station";
names(change)[names(change)=="測項"]="Item");
func(Samchong)
func(Sanchong)
View(Sanchong)
return(
names(change)[names(change)=="日期"]="Date",
func(Sanchong)
View(Sanchong)
return(
names(change)[names(change)=="日期"]="Date",
return()
func(Sanchong)
func(Sanchong)
View(Sanchong)
names(Banqiao)[names(Banqiao)=="日期"]="Date";
names(Banqiao)[names(Banqiao)=="測站"]="Station";
names(Banqiao)[names(Banqiao)=="測項"]="Item";
names(Banqiao)[names(Banqiao)=="日期"]="Date";
names(Banqiao)[names(Banqiao)=="測站"]="Station";
names(Banqiao)[names(Banqiao)=="測項"]="Item";
#Linkou
names(Linkou)[names(Linkou)=="日期"]="Date";
names(Linkou)[names(Linkou)=="測站"]="Station";
names(Linkou)[names(Linkou)=="測項"]="Item";
#Sanchong
names(Sanchong)[names(Sanchong)=="日期"]="Date";
names(Sanchong)[names(Sanchong)=="測站"]="Station";
names(Sanchong)[names(Sanchong)=="測項"]="Item";
#Tucheng
names(Tucheng)[names(Tucheng)=="日期"]="Date";
names(Tucheng)[names(Tucheng)=="測站"]="Station";
names(Tucheng)[names(Tucheng)=="測項"]="Item";
#WanLi
names(WanLi)[names(WanLi)=="日期"]="Date";
names(WanLi)[names(WanLi)=="測站"]="Station";
names(WanLi)[names(WanLi)=="測項"]="Item";
#Xinzhuang
names(Xinzhuang)[names(Xinzhuang)=="日期"]="Date";
names(Xinzhuang)[names(Xinzhuang)=="測站"]="Station";
names(Xinzhuang)[names(Xinzhuang)=="測項"]="Item";
#Xizhi
names(Xizhi)[names(Xizhi)=="日期"]="Date";
names(Xizhi)[names(Xizhi)=="測站"]="Station";
names(Xizhi)[names(Xizhi)=="測項"]="Item";
View(AirAll)
AirAll<-rbind(Banqiao,Linkou,Sanchong,Tucheng,WanLi,Xinzhuang,Xizhi)
AirPollution.201612 <- rbind(
Banqiao[grepl("2016/12",Banqiao$Date),],
Linkou[grepl("2016/12",Linkou$Date),],
Sanchong[grepl("2016/12",Sanchong$Date),],
Tucheng[grepl("2016/12",Tucheng$Date),],
WanLi[grepl("2016/12",WanLi$Date),],
Xinzhuang[grepl("2016/12",Xinzhuang$Date),],
Xizhi[grepl("2016/12",Xizhi$Date),])
AirPollution.201612 <- as.data.frame(AirPollution.201612)
for (i in 4:ncol(AirPollution.201612)) {
if (!all(AirPollution.201612[,i] %in% c(" ","x","*","#"))) {
AirPollution.201612[,i] <- as.numeric(AirPollution.201612[,i])
}
}
AirPollution.201612$Average<- round(rowMeans(AirPollution.201612[, 4:27],na.rm = TRUE),2)
Air_Tidy<-
AirPollution.201612[,-4:-27] %>% group_by(Station,Item) %>%
summarise(Mean = mean(Average,na.rm = T))
factory_operate <- NewTaipeiFactoryLocation[grepl("生產中",NewTaipeiFactoryLocation$STATUS),]
factory_operate$Area <- substr(factory_operate$FACT_ADDR,4,6)
factory_Area_Qunality <- group_by(factory_operate,Area)%>%summarise(nQuantity=n_distinct(REGI_ID))
factory_Area_Qunality <- group_by(factory_operate,Area)%>%summarise(nQuantity=n_distinct(REGI_ID))
factory_Area_Qunality <- arrange(factory_Area_Qunality,desc(nQuantity))
View(AirPollution.201612)
for (i in 4:ncol(AirPollution.201610)) {
if (!all(AirPollution.201610[,i] %in% c(" ","x","*","#"))) {
AirPollution.201610[,i] <- as.numeric(AirPollution.201610[,i])
}
}
Air_Tidy<-
AirPollution.201612[,-4:-27] %>% group_by(Station,Item) %>%
summarise(Mean = mean(Average,na.rm = T))
View(Air_Tidy)
Air_Tidy<-
AirPollution.201612[,-4:-27] %>% group_by(Station,Item) %>%
summarise(
Month= 12
Mean = mean(Average,na.rm = T))
Air_Tidy<-
AirPollution.201612[,-4:-27] %>% group_by(Station,Item) %>%
summarise(
Month= 12,
Mean = mean(Average,na.rm = T))
View(Air_Tidy)
AirPollution.201610 <- rbind(
Banqiao[grepl("2016/10",Banqiao$Date),],
Linkou[grepl("2016/10",Linkou$Date),],
Sanchong[grepl("2016/10",Sanchong$Date),],
Tucheng[grepl("2016/10",Tucheng$Date),],
WanLi[grepl("2016/10",WanLi$Date),],
Xinzhuang[grepl("2016/10",Xinzhuang$Date),],
Xizhi[grepl("2016/10",Xizhi$Date),])
AirPollution.201610 <- as.data.frame(AirPollution.201610)
for (i in 4:ncol(AirPollution.201610)) {
if (!all(AirPollution.201610[,i] %in% c(" ","x","*","#"))) {
AirPollution.201610[,i] <- as.numeric(AirPollution.201610[,i])
}
}
AirPollution.201610$Average<- round(rowMeans(AirPollution.201610[, 4:27],na.rm = TRUE),2)
AirPollution.201610 <- AirPollution.201610[order(AirPollution.201610$Item, -AirPollution.201610$Average),]
AirPollution.201611 <- rbind(
Banqiao[grepl("2016/11",Banqiao$Date),],
Linkou[grepl("2016/11",Linkou$Date),],
Sanchong[grepl("2016/11",Sanchong$Date),],
Tucheng[grepl("2016/11",Tucheng$Date),],
WanLi[grepl("2016/11",WanLi$Date),],
Xinzhuang[grepl("2016/11",Xinzhuang$Date),],
Xizhi[grepl("2016/11",Xizhi$Date),])
AirPollution.201611 <- as.data.frame(AirPollution.201611)
for (i in 4:ncol(AirPollution.201611)) {
if (!all(AirPollution.201611[,i] %in% c(" ","x","*","#"))) {
AirPollution.201611[,i] <- as.numeric(AirPollution.201611[,i])
}
}
AirPollution.201611 <- AirPollution.201611[order(AirPollution.201611$Item, -AirPollution.201611$Average),]
AirPollution.201611$Average<- round(rowMeans(AirPollution.201611[, 4:27],na.rm = TRUE),2)
AirPollution.201611 <- AirPollution.201611[order(AirPollution.201611$Item, -AirPollution.201611$Average),]
AirPollution.201612 <- rbind(
Banqiao[grepl("2016/12",Banqiao$Date),],
Linkou[grepl("2016/12",Linkou$Date),],
Sanchong[grepl("2016/12",Sanchong$Date),],
Tucheng[grepl("2016/12",Tucheng$Date),],
WanLi[grepl("2016/12",WanLi$Date),],
Xinzhuang[grepl("2016/12",Xinzhuang$Date),],
Xizhi[grepl("2016/12",Xizhi$Date),])
AirPollution.201612 <- as.data.frame(AirPollution.201612)
for (i in 4:ncol(AirPollution.201612)) {
if (!all(AirPollution.201612[,i] %in% c(" ","x","*","#"))) {
AirPollution.201612[,i] <- as.numeric(AirPollution.201612[,i])
}
}
AirPollution.201612$Average<- round(rowMeans(AirPollution.201612[, 4:27],na.rm = TRUE),2)
AirPollution.201612 <- AirPollution.201612[order(AirPollution.201612$Item, -AirPollution.201612$Average),]
Air_Tidy<-rbind(
AirPollution.201610[,-4:-27] %>% group_by(Station,Item) %>%
summarise(
Month= 10,
Mean = mean(Average,na.rm = T)),
AirPollution.201611[,-4:-27] %>% group_by(Station,Item) %>%
summarise(
Month= 11,
Mean = mean(Average,na.rm = T)),
AirPollution.201612[,-4:-27] %>% group_by(Station,Item) %>%
summarise(
Month= 12,
Mean = mean(Average,na.rm = T))
)
Air_Tidy
Air_Tidy.s <- spread(Air_Tidy, Item, Mean)
Air_Tidy.m <- melt(Air_Tidy, id.vars = c("Station","Item"))
Air_Tidy.m <- melt(Air_Tidy, id.vars = c("Station","Month","Item"))
Air_Tidy.m <- melt(Air_Tidy, id.vars = c("Station","Item","Month"))
,"Month"
Air_Tidy.m <- melt(Air_Tidy, id.vars = c("Station","Month","Item"))
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=Month,  # 用aes()，描繪散布圖內的各種屬性
y=PM2.5,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Month
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=c(Station,Month)
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +geom_smooth(aes(x=Temp,
y=Ozone)) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +geom_smooth(aes(x=PM2.5,
y=PM10)) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
qplot(Station , data = Air_Tidy.s, geom = "bar", weight = PM2.5) +
ylab("PM2.5") + geom_bar(stat = 'count', fill = 'steelblue', colour = 'blue')
qplot(Station , data = Air_Tidy.s, geom = "bar", weight = PM2.5/3) +
ylab("PM2.5") + geom_bar(stat = 'count', fill = 'steelblue', colour = 'blue')
ggplot(data=Air_Tidy.s) +
# 散布圖對應的函式是geom_point()
geom_point(aes(x=PM2.5,  # 用aes()，描繪散布圖內的各種屬性
y=PM10,
main="Scatter Plot of PM10-PM2.5",
color=Station
)
) +
# 用geom_smooth()加上趨勢線
geom_smooth(aes(x=PM2.5,
y=PM10)) +
# 用labs()，進行文字上的標註(Annotation)
labs(title="Scatter of PM10-PM2.5",
x="PM2.5",
y="PM10") + theme_bw()
